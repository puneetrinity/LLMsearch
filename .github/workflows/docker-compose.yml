name: CI - Docker Compose Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-compose:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: searchdb
          POSTGRES_USER: searchuser
          POSTGRES_PASSWORD: searchpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U searchuser -d searchdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 📁 Copy .env if available
        run: cp .env.example .env || echo "No .env.example found"

      - name: 🐳 Start services with Docker Compose
        run: |
          docker-compose -f docker-compose.yml --profile init up -d --build

      - name: ⏳ Wait for containers to be healthy
        run: |
          echo "Waiting for containers to become healthy..."
          sleep 60

      - name: 🔍 Check container status
        run: docker ps -a

      - name: ✅ Test API Health Endpoint
        run: curl --fail http://localhost:8000/health || (docker logs $(docker ps -q) && exit 1)

      - name: 🧹 Clean up
        if: always()
        run: docker-compose -f docker-compose.yml down -v
